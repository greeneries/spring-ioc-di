<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- 
		xmlns ==> beans, default namespace 관리, 해당 네임스페이스 안에 태그는 네임 스페이스명을 생략하고 사용한다. 
		
		xmlns:context ===> context
		네임스페이스명을 꼭 붙여서 태그를 사용해야 한다. 
		
	 -->
 
 	<!-- 
 		Annotation을 사용하여 객체 생성, 객체 설정을 한다고 통보한다.
 		base-package에서부터 하부의 있는 모든 클래스가 잠재적인 처리대상이 된다.
 		다음 annotaion이 있는 클래스들을 객체로 만들어 빈 컨테이너에 등록한다.
 		
 		@Component
 		@Controller
 		@Service
 		@Repository
 		@Configuration ... 
 		
 		더불어서, component-scan 설정은 annotation-config 설정을 동반한다. 
 		
 		일반적으로 VO는 빈 컨테이너에 등록해서 사용하지 않는다. 
 		왜냐하면, VO는 데이터를 보관하거나 전송하는 용도로 사용하기 때문에 매번 값이 변경합니다.
 		스프링 빈 컨테이너에 등록된 객체는 기본적으로 singleton으로 관리합니다.
 		따라서, 꼭 필요한 경우가 아니라면 VO는 빈 컨테이너에 등록해서 사용하지 않습니다. 
 	 -->
	 <context:component-scan base-package="com.example.ioc.step6">
	 	
	 </context:component-scan>
	
</beans>
